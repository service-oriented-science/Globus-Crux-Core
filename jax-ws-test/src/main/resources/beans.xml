<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:jaxws="http://cxf.apache.org/jaxws"
       xmlns:crux="http://www.globus.org/schema/crux"
       xmlns:cxf="http://cxf.apache.org/core"
       xmlns:amq="http://activemq.apache.org/schema/core"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd
http://www.globus.org/schema/crux http://www.globus.org/schema/crux/crux.xsd
http://cxf.apache.org/core http://cxf.apache.org/schemas/core.xsd
http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core.xsd">

    <import resource="classpath:META-INF/cxf/cxf.xml"/>
    <import resource="classpath:META-INF/cxf/cxf-extension-soap.xml"/>
    <import resource="classpath:META-INF/cxf/cxf-servlet.xml"/>

    <amq:broker useJmx="true" persistent="false">
        <amq:transportConnectors>
            <amq:transportConnector uri="vm://localhost"/>
        </amq:transportConnectors>
    </amq:broker>
    
 	<amq:connectionFactory id="jmsFactory" brokerURL="vm://localhost"/>
	
    <bean id="notifierFactory" class="org.globus.crux.messaging.sender.impl.JMSNotifierFactory">
        <property name="connectionFactory" ref="jmsFactory"/>
    </bean>

    <!--This is the resource store.  It is used both by the counter service vi ResourceContext
    and the Factory to store the created resource-->
    <bean id="resourceStore" class="org.globus.crux.InMemoryResourceStore"/>

    <!--
    This is the resource context that is used for accessing resources.  This
    could be passed around between the services that share the same resources.
    Might be worth abstracting out the resource storage from the context class.
    -->
    <bean id="resourceContext" class="org.globus.crux.DefaultResourceContext">
        <property name="store" ref="resourceStore"/>
    </bean>

    <!--
    This is the actual service implementation.
    -->
    <bean id="counterResource" class="com.counter.Counter">
        <property name="resourceContext" ref="resourceContext"/>
    </bean>

    <!--
    Crux service bean definition.
    -->

    <crux:annotatedRPSet id="counterRPSet" target="counterResource"/>

    <crux:service id="counterService" target="counterResource" interf="com.counter.CounterPortType">
        <crux:providers>
            <crux:getRPProvider target="counterRPSet"/>
            <crux:queryRPProvider>
                <crux:queryEngine dialect="xpath" target="counterRPSet"/>
            </crux:queryRPProvider>
            <crux:immediateResourceLifetimeProvider target="counterResource"/>
            <crux:scheduledResourceLifetimeProvider target="counterResource"/>
        </crux:providers>
        <crux:notifiers>
        	<crux:RPChangeNotifier type="jms" target="counterRPSet"/>
        </crux:notifiers>
    </crux:service>

    <!--
    This is an interceptor which extracts the key from the addressing headers in the request.
    This requires the ResourceContext to populate.  it also uses the appropriate jaxb configuration.
    -->
    <bean id="keyInterceptor" class="org.globus.crux.IdExtractorInterceptor">
        <property name="context" ref="resourceContext"/>
        <property name="JAXBParam" value="com.counter"/>
        <property name="target" ref="counterResource"/>
    </bean>


    <!--
    This is the standard configuration for a JAXWS service from cxf.
    -->
    <jaxws:endpoint xmlns:counter="http://counter.com/service"
                    id="counter"
                    implementor="#counterService"
                    address="/counter"
                    serviceName="counter:CounterService"
                    endpointName="counter:CounterPortTypePort"
                    implementorClass="com.counter.CounterPortType">
        <jaxws:inInterceptors>
            <ref bean="keyInterceptor"/>
        </jaxws:inInterceptors>
        <jaxws:features>

            <wsa:addressing xmlns:wsa="http://cxf.apache.org/ws/addressing"/>
        </jaxws:features>
    </jaxws:endpoint>
</beans>